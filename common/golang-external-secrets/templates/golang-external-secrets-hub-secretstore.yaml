apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-backend
  namespace: golang-external-secrets
spec:
  provider:
    vault:
      server: https://vault-vault.{{ .Values.global.hubClusterDomain }}
      path: secret
      # Version of KV backend
      version: v2
{{- if .Values.golangExternalSecrets.caProvider.enabled }}
{{ if .Values.clusterGroup.isHubCluster }}
      caProvider:
        type: {{ .Values.golangExternalSecrets.caProvider.hubCluster.type }}
        name: {{ .Values.golangExternalSecrets.caProvider.hubCluster.name }}
        key: {{ .Values.golangExternalSecrets.caProvider.hubCluster.key }}
        namespace: {{ .Values.golangExternalSecrets.caProvider.hubCluster.namespace }}
{{ else }}
      caProvider:
        type: {{ .Values.golangExternalSecrets.caProvider.nonhubCluster.type }}
        name: {{ .Values.golangExternalSecrets.caProvider.nonhubCluster.name }}
        key: {{ .Values.golangExternalSecrets.caProvider.nonhubCluster.key }}
        namespace: {{ .Values.golangExternalSecrets.caProvider.nonhubCluster.namespace }}
{{ end }}
{{- end }}
      auth:
        kubernetes:
{{ if .Values.clusterGroup.isHubCluster }}
          mountPath: {{ .Values.mountPath }}
          role: {{ .Values.mountRole }}
{{ else }}
          mountPath: {{ $.Values.global.clusterDomain }}
          role: {{ $.Values.global.clusterDomain }}-role
{{ end }}
          secretRef:
            name: golang-external-secrets
            namespace: golang-external-secrets
            key: "token"
