#!/usr/bin/env ansible-playbook
# This is all based on the assumption AAP is on cluster
---
- name: Retrieve Credentials for AAP on OpenShift
  become: false
  connection: local
  hosts: localhost
  gather_facts: false
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
  tasks:
    # Correction required: This attempte to work irrespective of whether AAP is defined on cluster or not
    - name: Get whether AAP is on cluster or not
      kubernetes.core.k8s_info:
        kind: ConfigMap
        namespace: ansible-automation-platform
        name: aap-configmap
      register: aap-configmap
      until: aap-configmap.data | length == 1
      retries: 20
      delay: 5
      ignore_errors: true

    - name: Retrieve API hostname for AAP
      kubernetes.core.k8s_info:
        kind: Route
        namespace: ansible-automation-platform
        name: controller
      register: aap_host
      until: aap_host.resources | length == 1
      retries: 20
      delay: 5

    - name: Set ansible_host
      ansible.builtin.set_fact:
        ansible_host: "{{ aap_host.resources[0].spec.host }}"

    - name: Retrieve admin password for AAP
      kubernetes.core.k8s_info:
        kind: Secret
        namespace: ansible-automation-platform
        name: controller-admin-password
      register: admin_pw
      until: admin_pw.resources | length == 1
      retries: 20
      delay: 5

    - name: Set admin_password fact
      ansible.builtin.set_fact:
        admin_password: "{{ admin_pw.resources[0].data.password | b64decode }}"

    - name: Report AAP Endpoint
      ansible.builtin.debug:
        msg: "AAP Endpoint: https://{{ ansible_host }}"

    - name: Report AAP User
      ansible.builtin.debug:
        msg: "AAP Admin User: admin"

    - name: Report AAP Admin Password
      ansible.builtin.debug:
        msg: "AAP Admin Password: {{ admin_password }}"
