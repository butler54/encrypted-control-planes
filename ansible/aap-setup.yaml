# THis playbook sets up aap

---
- hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    ns: imperative
  tasks:
    - name: Echo the input variable
      debug:
        msg: "Hello world from AAP"

    # - name: Find managed clusters
    #   kubernetes.core.k8s_info:
    #     kind: ManagedCluster
    #     api_version: "cluster.open-cluster-management.io/v1"
    #   register: managed_clusters

    # - name: Set resource fact
    #   ansible.builtin.set_fact:
    #     resources: "{{ managed_clusters['resources'] }}"

    # - name: Do nothing when no managed clusters are found
    #   ansible.builtin.meta: end_play
    #   when: resources | length == 0 or managed_clusters.failed or not managed_clusters.api_found

    # - name: Loop over returned managed cluster resources
    #   kubernetes.core.k8s:
    #     state: present
    #     definition:
    #       kind: Secret
    #       apiVersion: v1
    #       metadata:
    #         name: "{{ item.metadata.name }}"
    #         namespace: "{{ ns }}"
    #       data:
    #         caBundle: "{{ item.spec.managedClusterClientConfigs[0].caBundle }}"
    #       type: Opaque
    #   when:
    #     - "'spec' in item"
    #     - "'managedClusterClientConfigs' in item.spec"
    #   loop: "{{ resources }}"
    #   loop_control:
    #     label: "{{ item.metadata.name }}"


    # - name: License AAP
    #   ansible.controller.license:
    #     manifest: "{{ aap_manifest_path }}"
    #     state: present
    #     tower_host: "{{ controller_hostname }}"
    #     tower_username: "{{ controller_username }}"
    #     tower_password: "{{ controller_password }}"
